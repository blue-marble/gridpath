# Copyright 2016-2023 Blue Marble Analytics LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


from collections import OrderedDict
from importlib import import_module
import os.path
import pandas as pd
import sys
import unittest

from tests.common_functions import create_abstract_model, add_components_and_load_data

TEST_DATA_DIRECTORY = os.path.join(os.path.dirname(__file__), "..", "..", "test_data")

# Import prerequisite modules
PREREQUISITE_MODULE_NAMES = ["temporal.operations.timepoints", "geography.load_zones"]
NAME_OF_MODULE_BEING_TESTED = "system.load_balance.static_load_requirement"
IMPORTED_PREREQ_MODULES = list()
for mdl in PREREQUISITE_MODULE_NAMES:
    try:
        imported_module = import_module("." + str(mdl), package="gridpath")
        IMPORTED_PREREQ_MODULES.append(imported_module)
    except ImportError:
        print("ERROR! Module " + str(mdl) + " not found.")
        sys.exit(1)
# Import the module we'll test
try:
    MODULE_BEING_TESTED = import_module(
        "." + NAME_OF_MODULE_BEING_TESTED, package="gridpath"
    )
except ImportError:
    print("ERROR! Couldn't import module " + NAME_OF_MODULE_BEING_TESTED + " to test.")


class TestLoadRequirement(unittest.TestCase):
    """ """

    def test_add_model_components(self):
        """
        Test that there are no errors when adding model components
        :return:
        """
        create_abstract_model(
            prereq_modules=IMPORTED_PREREQ_MODULES,
            module_to_test=MODULE_BEING_TESTED,
            test_data_dir=TEST_DATA_DIRECTORY,
            weather_iteration="",
            hydro_iteration="",
            availability_iteration="",
            subproblem="",
            stage="",
        )

    def test_load_model_data(self):
        """
        Test that data are loaded with no errors
        :return:
        """
        add_components_and_load_data(
            prereq_modules=IMPORTED_PREREQ_MODULES,
            module_to_test=MODULE_BEING_TESTED,
            test_data_dir=TEST_DATA_DIRECTORY,
            weather_iteration="",
            hydro_iteration="",
            availability_iteration="",
            subproblem="",
            stage="",
        )

    def test_data_loaded_correctly(self):
        """
        Test components initialized with data as expected
        :return:
        """
        m, data = add_components_and_load_data(
            prereq_modules=IMPORTED_PREREQ_MODULES,
            module_to_test=MODULE_BEING_TESTED,
            test_data_dir=TEST_DATA_DIRECTORY,
            weather_iteration="",
            hydro_iteration="",
            availability_iteration="",
            subproblem="",
            stage="",
        )
        instance = m.create_instance(data)

        # Set: LOAD_ZONE_LOAD_CMPNTS_ALL
        expected = sorted(
            [("Zone1", "all"), ("Zone2", "all"), ("Zone3", "all"), (("Zone4", "all"))]
        )
        actual = sorted([(z, cmp) for (z, cmp) in instance.LOAD_ZONE_LOAD_CMPNTS_ALL])
        self.assertListEqual(
            expected, actual, msg="LOAD_ZONES set data does not load correctly."
        )

        # Param: load_level_default
        expected_defult = OrderedDict(
            sorted(
                {
                    ("Zone1", "all"): "undefined",
                    ("Zone2", "all"): "undefined",
                    ("Zone3", "all"): "undefined",
                    ("Zone4", "all"): 0,
                }.items()
            )
        )
        actual_default = OrderedDict(
            sorted(
                {
                    (z, cmp): instance.load_level_default[z, cmp]
                    for (z, cmp) in instance.LOAD_ZONE_LOAD_CMPNTS_ALL
                }.items()
            )
        )
        self.assertDictEqual(expected_defult, actual_default)

        # Set: LOAD_ZONE_TMP_LOAD_CMPNTS_ALL
        expected_lz_tmp_lc_all = sorted(
            [
                ("Zone1", 20200101, "all"),
                ("Zone1", 20200102, "all"),
                ("Zone1", 20200103, "all"),
                ("Zone1", 20200104, "all"),
                ("Zone1", 20200105, "all"),
                ("Zone1", 20200106, "all"),
                ("Zone1", 20200107, "all"),
                ("Zone1", 20200108, "all"),
                ("Zone1", 20200109, "all"),
                ("Zone1", 20200110, "all"),
                ("Zone1", 20200111, "all"),
                ("Zone1", 20200112, "all"),
                ("Zone1", 20200113, "all"),
                ("Zone1", 20200114, "all"),
                ("Zone1", 20200115, "all"),
                ("Zone1", 20200116, "all"),
                ("Zone1", 20200117, "all"),
                ("Zone1", 20200118, "all"),
                ("Zone1", 20200119, "all"),
                ("Zone1", 20200120, "all"),
                ("Zone1", 20200121, "all"),
                ("Zone1", 20200122, "all"),
                ("Zone1", 20200123, "all"),
                ("Zone1", 20200124, "all"),
                ("Zone1", 20200201, "all"),
                ("Zone1", 20200202, "all"),
                ("Zone1", 20200203, "all"),
                ("Zone1", 20200204, "all"),
                ("Zone1", 20200205, "all"),
                ("Zone1", 20200206, "all"),
                ("Zone1", 20200207, "all"),
                ("Zone1", 20200208, "all"),
                ("Zone1", 20200209, "all"),
                ("Zone1", 20200210, "all"),
                ("Zone1", 20200211, "all"),
                ("Zone1", 20200212, "all"),
                ("Zone1", 20200213, "all"),
                ("Zone1", 20200214, "all"),
                ("Zone1", 20200215, "all"),
                ("Zone1", 20200216, "all"),
                ("Zone1", 20200217, "all"),
                ("Zone1", 20200218, "all"),
                ("Zone1", 20200219, "all"),
                ("Zone1", 20200220, "all"),
                ("Zone1", 20200221, "all"),
                ("Zone1", 20200222, "all"),
                ("Zone1", 20200223, "all"),
                ("Zone1", 20200224, "all"),
                ("Zone1", 20300101, "all"),
                ("Zone1", 20300102, "all"),
                ("Zone1", 20300103, "all"),
                ("Zone1", 20300104, "all"),
                ("Zone1", 20300105, "all"),
                ("Zone1", 20300106, "all"),
                ("Zone1", 20300107, "all"),
                ("Zone1", 20300108, "all"),
                ("Zone1", 20300109, "all"),
                ("Zone1", 20300110, "all"),
                ("Zone1", 20300111, "all"),
                ("Zone1", 20300112, "all"),
                ("Zone1", 20300113, "all"),
                ("Zone1", 20300114, "all"),
                ("Zone1", 20300115, "all"),
                ("Zone1", 20300116, "all"),
                ("Zone1", 20300117, "all"),
                ("Zone1", 20300118, "all"),
                ("Zone1", 20300119, "all"),
                ("Zone1", 20300120, "all"),
                ("Zone1", 20300121, "all"),
                ("Zone1", 20300122, "all"),
                ("Zone1", 20300123, "all"),
                ("Zone1", 20300124, "all"),
                ("Zone1", 20300201, "all"),
                ("Zone1", 20300202, "all"),
                ("Zone1", 20300203, "all"),
                ("Zone1", 20300204, "all"),
                ("Zone1", 20300205, "all"),
                ("Zone1", 20300206, "all"),
                ("Zone1", 20300207, "all"),
                ("Zone1", 20300208, "all"),
                ("Zone1", 20300209, "all"),
                ("Zone1", 20300210, "all"),
                ("Zone1", 20300211, "all"),
                ("Zone1", 20300212, "all"),
                ("Zone1", 20300213, "all"),
                ("Zone1", 20300214, "all"),
                ("Zone1", 20300215, "all"),
                ("Zone1", 20300216, "all"),
                ("Zone1", 20300217, "all"),
                ("Zone1", 20300218, "all"),
                ("Zone1", 20300219, "all"),
                ("Zone1", 20300220, "all"),
                ("Zone1", 20300221, "all"),
                ("Zone1", 20300222, "all"),
                ("Zone1", 20300223, "all"),
                ("Zone1", 20300224, "all"),
                ("Zone2", 20200101, "all"),
                ("Zone2", 20200102, "all"),
                ("Zone2", 20200103, "all"),
                ("Zone2", 20200104, "all"),
                ("Zone2", 20200105, "all"),
                ("Zone2", 20200106, "all"),
                ("Zone2", 20200107, "all"),
                ("Zone2", 20200108, "all"),
                ("Zone2", 20200109, "all"),
                ("Zone2", 20200110, "all"),
                ("Zone2", 20200111, "all"),
                ("Zone2", 20200112, "all"),
                ("Zone2", 20200113, "all"),
                ("Zone2", 20200114, "all"),
                ("Zone2", 20200115, "all"),
                ("Zone2", 20200116, "all"),
                ("Zone2", 20200117, "all"),
                ("Zone2", 20200118, "all"),
                ("Zone2", 20200119, "all"),
                ("Zone2", 20200120, "all"),
                ("Zone2", 20200121, "all"),
                ("Zone2", 20200122, "all"),
                ("Zone2", 20200123, "all"),
                ("Zone2", 20200124, "all"),
                ("Zone2", 20200201, "all"),
                ("Zone2", 20200202, "all"),
                ("Zone2", 20200203, "all"),
                ("Zone2", 20200204, "all"),
                ("Zone2", 20200205, "all"),
                ("Zone2", 20200206, "all"),
                ("Zone2", 20200207, "all"),
                ("Zone2", 20200208, "all"),
                ("Zone2", 20200209, "all"),
                ("Zone2", 20200210, "all"),
                ("Zone2", 20200211, "all"),
                ("Zone2", 20200212, "all"),
                ("Zone2", 20200213, "all"),
                ("Zone2", 20200214, "all"),
                ("Zone2", 20200215, "all"),
                ("Zone2", 20200216, "all"),
                ("Zone2", 20200217, "all"),
                ("Zone2", 20200218, "all"),
                ("Zone2", 20200219, "all"),
                ("Zone2", 20200220, "all"),
                ("Zone2", 20200221, "all"),
                ("Zone2", 20200222, "all"),
                ("Zone2", 20200223, "all"),
                ("Zone2", 20200224, "all"),
                ("Zone2", 20300101, "all"),
                ("Zone2", 20300102, "all"),
                ("Zone2", 20300103, "all"),
                ("Zone2", 20300104, "all"),
                ("Zone2", 20300105, "all"),
                ("Zone2", 20300106, "all"),
                ("Zone2", 20300107, "all"),
                ("Zone2", 20300108, "all"),
                ("Zone2", 20300109, "all"),
                ("Zone2", 20300110, "all"),
                ("Zone2", 20300111, "all"),
                ("Zone2", 20300112, "all"),
                ("Zone2", 20300113, "all"),
                ("Zone2", 20300114, "all"),
                ("Zone2", 20300115, "all"),
                ("Zone2", 20300116, "all"),
                ("Zone2", 20300117, "all"),
                ("Zone2", 20300118, "all"),
                ("Zone2", 20300119, "all"),
                ("Zone2", 20300120, "all"),
                ("Zone2", 20300121, "all"),
                ("Zone2", 20300122, "all"),
                ("Zone2", 20300123, "all"),
                ("Zone2", 20300124, "all"),
                ("Zone2", 20300201, "all"),
                ("Zone2", 20300202, "all"),
                ("Zone2", 20300203, "all"),
                ("Zone2", 20300204, "all"),
                ("Zone2", 20300205, "all"),
                ("Zone2", 20300206, "all"),
                ("Zone2", 20300207, "all"),
                ("Zone2", 20300208, "all"),
                ("Zone2", 20300209, "all"),
                ("Zone2", 20300210, "all"),
                ("Zone2", 20300211, "all"),
                ("Zone2", 20300212, "all"),
                ("Zone2", 20300213, "all"),
                ("Zone2", 20300214, "all"),
                ("Zone2", 20300215, "all"),
                ("Zone2", 20300216, "all"),
                ("Zone2", 20300217, "all"),
                ("Zone2", 20300218, "all"),
                ("Zone2", 20300219, "all"),
                ("Zone2", 20300220, "all"),
                ("Zone2", 20300221, "all"),
                ("Zone2", 20300222, "all"),
                ("Zone2", 20300223, "all"),
                ("Zone2", 20300224, "all"),
                ("Zone3", 20200101, "all"),
                ("Zone3", 20200102, "all"),
                ("Zone3", 20200103, "all"),
                ("Zone3", 20200104, "all"),
                ("Zone3", 20200105, "all"),
                ("Zone3", 20200106, "all"),
                ("Zone3", 20200107, "all"),
                ("Zone3", 20200108, "all"),
                ("Zone3", 20200109, "all"),
                ("Zone3", 20200110, "all"),
                ("Zone3", 20200111, "all"),
                ("Zone3", 20200112, "all"),
                ("Zone3", 20200113, "all"),
                ("Zone3", 20200114, "all"),
                ("Zone3", 20200115, "all"),
                ("Zone3", 20200116, "all"),
                ("Zone3", 20200117, "all"),
                ("Zone3", 20200118, "all"),
                ("Zone3", 20200119, "all"),
                ("Zone3", 20200120, "all"),
                ("Zone3", 20200121, "all"),
                ("Zone3", 20200122, "all"),
                ("Zone3", 20200123, "all"),
                ("Zone3", 20200124, "all"),
                ("Zone3", 20200201, "all"),
                ("Zone3", 20200202, "all"),
                ("Zone3", 20200203, "all"),
                ("Zone3", 20200204, "all"),
                ("Zone3", 20200205, "all"),
                ("Zone3", 20200206, "all"),
                ("Zone3", 20200207, "all"),
                ("Zone3", 20200208, "all"),
                ("Zone3", 20200209, "all"),
                ("Zone3", 20200210, "all"),
                ("Zone3", 20200211, "all"),
                ("Zone3", 20200212, "all"),
                ("Zone3", 20200213, "all"),
                ("Zone3", 20200214, "all"),
                ("Zone3", 20200215, "all"),
                ("Zone3", 20200216, "all"),
                ("Zone3", 20200217, "all"),
                ("Zone3", 20200218, "all"),
                ("Zone3", 20200219, "all"),
                ("Zone3", 20200220, "all"),
                ("Zone3", 20200221, "all"),
                ("Zone3", 20200222, "all"),
                ("Zone3", 20200223, "all"),
                ("Zone3", 20200224, "all"),
                ("Zone3", 20300101, "all"),
                ("Zone3", 20300102, "all"),
                ("Zone3", 20300103, "all"),
                ("Zone3", 20300104, "all"),
                ("Zone3", 20300105, "all"),
                ("Zone3", 20300106, "all"),
                ("Zone3", 20300107, "all"),
                ("Zone3", 20300108, "all"),
                ("Zone3", 20300109, "all"),
                ("Zone3", 20300110, "all"),
                ("Zone3", 20300111, "all"),
                ("Zone3", 20300112, "all"),
                ("Zone3", 20300113, "all"),
                ("Zone3", 20300114, "all"),
                ("Zone3", 20300115, "all"),
                ("Zone3", 20300116, "all"),
                ("Zone3", 20300117, "all"),
                ("Zone3", 20300118, "all"),
                ("Zone3", 20300119, "all"),
                ("Zone3", 20300120, "all"),
                ("Zone3", 20300121, "all"),
                ("Zone3", 20300122, "all"),
                ("Zone3", 20300123, "all"),
                ("Zone3", 20300124, "all"),
                ("Zone3", 20300201, "all"),
                ("Zone3", 20300202, "all"),
                ("Zone3", 20300203, "all"),
                ("Zone3", 20300204, "all"),
                ("Zone3", 20300205, "all"),
                ("Zone3", 20300206, "all"),
                ("Zone3", 20300207, "all"),
                ("Zone3", 20300208, "all"),
                ("Zone3", 20300209, "all"),
                ("Zone3", 20300210, "all"),
                ("Zone3", 20300211, "all"),
                ("Zone3", 20300212, "all"),
                ("Zone3", 20300213, "all"),
                ("Zone3", 20300214, "all"),
                ("Zone3", 20300215, "all"),
                ("Zone3", 20300216, "all"),
                ("Zone3", 20300217, "all"),
                ("Zone3", 20300218, "all"),
                ("Zone3", 20300219, "all"),
                ("Zone3", 20300220, "all"),
                ("Zone3", 20300221, "all"),
                ("Zone3", 20300222, "all"),
                ("Zone3", 20300223, "all"),
                ("Zone3", 20300224, "all"),
                ("Zone4", 20200101, "all"),
                ("Zone4", 20200102, "all"),
                ("Zone4", 20200103, "all"),
                ("Zone4", 20200104, "all"),
                ("Zone4", 20200105, "all"),
                ("Zone4", 20200106, "all"),
                ("Zone4", 20200107, "all"),
                ("Zone4", 20200108, "all"),
                ("Zone4", 20200109, "all"),
                ("Zone4", 20200110, "all"),
                ("Zone4", 20200111, "all"),
                ("Zone4", 20200112, "all"),
                ("Zone4", 20200113, "all"),
                ("Zone4", 20200114, "all"),
                ("Zone4", 20200115, "all"),
                ("Zone4", 20200116, "all"),
                ("Zone4", 20200117, "all"),
                ("Zone4", 20200118, "all"),
                ("Zone4", 20200119, "all"),
                ("Zone4", 20200120, "all"),
                ("Zone4", 20200121, "all"),
                ("Zone4", 20200122, "all"),
                ("Zone4", 20200123, "all"),
                ("Zone4", 20200124, "all"),
                ("Zone4", 20200201, "all"),
                ("Zone4", 20200202, "all"),
                ("Zone4", 20200203, "all"),
                ("Zone4", 20200204, "all"),
                ("Zone4", 20200205, "all"),
                ("Zone4", 20200206, "all"),
                ("Zone4", 20200207, "all"),
                ("Zone4", 20200208, "all"),
                ("Zone4", 20200209, "all"),
                ("Zone4", 20200210, "all"),
                ("Zone4", 20200211, "all"),
                ("Zone4", 20200212, "all"),
                ("Zone4", 20200213, "all"),
                ("Zone4", 20200214, "all"),
                ("Zone4", 20200215, "all"),
                ("Zone4", 20200216, "all"),
                ("Zone4", 20200217, "all"),
                ("Zone4", 20200218, "all"),
                ("Zone4", 20200219, "all"),
                ("Zone4", 20200220, "all"),
                ("Zone4", 20200221, "all"),
                ("Zone4", 20200222, "all"),
                ("Zone4", 20200223, "all"),
                ("Zone4", 20200224, "all"),
                ("Zone4", 20300101, "all"),
                ("Zone4", 20300102, "all"),
                ("Zone4", 20300103, "all"),
                ("Zone4", 20300104, "all"),
                ("Zone4", 20300105, "all"),
                ("Zone4", 20300106, "all"),
                ("Zone4", 20300107, "all"),
                ("Zone4", 20300108, "all"),
                ("Zone4", 20300109, "all"),
                ("Zone4", 20300110, "all"),
                ("Zone4", 20300111, "all"),
                ("Zone4", 20300112, "all"),
                ("Zone4", 20300113, "all"),
                ("Zone4", 20300114, "all"),
                ("Zone4", 20300115, "all"),
                ("Zone4", 20300116, "all"),
                ("Zone4", 20300117, "all"),
                ("Zone4", 20300118, "all"),
                ("Zone4", 20300119, "all"),
                ("Zone4", 20300120, "all"),
                ("Zone4", 20300121, "all"),
                ("Zone4", 20300122, "all"),
                ("Zone4", 20300123, "all"),
                ("Zone4", 20300124, "all"),
                ("Zone4", 20300201, "all"),
                ("Zone4", 20300202, "all"),
                ("Zone4", 20300203, "all"),
                ("Zone4", 20300204, "all"),
                ("Zone4", 20300205, "all"),
                ("Zone4", 20300206, "all"),
                ("Zone4", 20300207, "all"),
                ("Zone4", 20300208, "all"),
                ("Zone4", 20300209, "all"),
                ("Zone4", 20300210, "all"),
                ("Zone4", 20300211, "all"),
                ("Zone4", 20300212, "all"),
                ("Zone4", 20300213, "all"),
                ("Zone4", 20300214, "all"),
                ("Zone4", 20300215, "all"),
                ("Zone4", 20300216, "all"),
                ("Zone4", 20300217, "all"),
                ("Zone4", 20300218, "all"),
                ("Zone4", 20300219, "all"),
                ("Zone4", 20300220, "all"),
                ("Zone4", 20300221, "all"),
                ("Zone4", 20300222, "all"),
                ("Zone4", 20300223, "all"),
                ("Zone4", 20300224, "all"),
            ]
        )
        actual_lz_tmp_lc_all = sorted(
            [(z, tmp, cmp) for (z, tmp, cmp) in instance.LOAD_ZONE_TMP_LOAD_CMPNTS_ALL]
        )
        self.assertListEqual(expected_lz_tmp_lc_all, actual_lz_tmp_lc_all)

        # Set: LOAD_ZONE_TMP_LOAD_CMPNTS_W_DEFINED_LOAD
        expected_lz_tmp_lc_def_load = sorted(
            [
                ("Zone1", 20200101, "all"),
                ("Zone1", 20200102, "all"),
                ("Zone1", 20200103, "all"),
                ("Zone1", 20200104, "all"),
                ("Zone1", 20200105, "all"),
                ("Zone1", 20200106, "all"),
                ("Zone1", 20200107, "all"),
                ("Zone1", 20200108, "all"),
                ("Zone1", 20200109, "all"),
                ("Zone1", 20200110, "all"),
                ("Zone1", 20200111, "all"),
                ("Zone1", 20200112, "all"),
                ("Zone1", 20200113, "all"),
                ("Zone1", 20200114, "all"),
                ("Zone1", 20200115, "all"),
                ("Zone1", 20200116, "all"),
                ("Zone1", 20200117, "all"),
                ("Zone1", 20200118, "all"),
                ("Zone1", 20200119, "all"),
                ("Zone1", 20200120, "all"),
                ("Zone1", 20200121, "all"),
                ("Zone1", 20200122, "all"),
                ("Zone1", 20200123, "all"),
                ("Zone1", 20200124, "all"),
                ("Zone1", 20200201, "all"),
                ("Zone1", 20200202, "all"),
                ("Zone1", 20200203, "all"),
                ("Zone1", 20200204, "all"),
                ("Zone1", 20200205, "all"),
                ("Zone1", 20200206, "all"),
                ("Zone1", 20200207, "all"),
                ("Zone1", 20200208, "all"),
                ("Zone1", 20200209, "all"),
                ("Zone1", 20200210, "all"),
                ("Zone1", 20200211, "all"),
                ("Zone1", 20200212, "all"),
                ("Zone1", 20200213, "all"),
                ("Zone1", 20200214, "all"),
                ("Zone1", 20200215, "all"),
                ("Zone1", 20200216, "all"),
                ("Zone1", 20200217, "all"),
                ("Zone1", 20200218, "all"),
                ("Zone1", 20200219, "all"),
                ("Zone1", 20200220, "all"),
                ("Zone1", 20200221, "all"),
                ("Zone1", 20200222, "all"),
                ("Zone1", 20200223, "all"),
                ("Zone1", 20200224, "all"),
                ("Zone1", 20300101, "all"),
                ("Zone1", 20300102, "all"),
                ("Zone1", 20300103, "all"),
                ("Zone1", 20300104, "all"),
                ("Zone1", 20300105, "all"),
                ("Zone1", 20300106, "all"),
                ("Zone1", 20300107, "all"),
                ("Zone1", 20300108, "all"),
                ("Zone1", 20300109, "all"),
                ("Zone1", 20300110, "all"),
                ("Zone1", 20300111, "all"),
                ("Zone1", 20300112, "all"),
                ("Zone1", 20300113, "all"),
                ("Zone1", 20300114, "all"),
                ("Zone1", 20300115, "all"),
                ("Zone1", 20300116, "all"),
                ("Zone1", 20300117, "all"),
                ("Zone1", 20300118, "all"),
                ("Zone1", 20300119, "all"),
                ("Zone1", 20300120, "all"),
                ("Zone1", 20300121, "all"),
                ("Zone1", 20300122, "all"),
                ("Zone1", 20300123, "all"),
                ("Zone1", 20300124, "all"),
                ("Zone1", 20300201, "all"),
                ("Zone1", 20300202, "all"),
                ("Zone1", 20300203, "all"),
                ("Zone1", 20300204, "all"),
                ("Zone1", 20300205, "all"),
                ("Zone1", 20300206, "all"),
                ("Zone1", 20300207, "all"),
                ("Zone1", 20300208, "all"),
                ("Zone1", 20300209, "all"),
                ("Zone1", 20300210, "all"),
                ("Zone1", 20300211, "all"),
                ("Zone1", 20300212, "all"),
                ("Zone1", 20300213, "all"),
                ("Zone1", 20300214, "all"),
                ("Zone1", 20300215, "all"),
                ("Zone1", 20300216, "all"),
                ("Zone1", 20300217, "all"),
                ("Zone1", 20300218, "all"),
                ("Zone1", 20300219, "all"),
                ("Zone1", 20300220, "all"),
                ("Zone1", 20300221, "all"),
                ("Zone1", 20300222, "all"),
                ("Zone1", 20300223, "all"),
                ("Zone1", 20300224, "all"),
                ("Zone2", 20200101, "all"),
                ("Zone2", 20200102, "all"),
                ("Zone2", 20200103, "all"),
                ("Zone2", 20200104, "all"),
                ("Zone2", 20200105, "all"),
                ("Zone2", 20200106, "all"),
                ("Zone2", 20200107, "all"),
                ("Zone2", 20200108, "all"),
                ("Zone2", 20200109, "all"),
                ("Zone2", 20200110, "all"),
                ("Zone2", 20200111, "all"),
                ("Zone2", 20200112, "all"),
                ("Zone2", 20200113, "all"),
                ("Zone2", 20200114, "all"),
                ("Zone2", 20200115, "all"),
                ("Zone2", 20200116, "all"),
                ("Zone2", 20200117, "all"),
                ("Zone2", 20200118, "all"),
                ("Zone2", 20200119, "all"),
                ("Zone2", 20200120, "all"),
                ("Zone2", 20200121, "all"),
                ("Zone2", 20200122, "all"),
                ("Zone2", 20200123, "all"),
                ("Zone2", 20200124, "all"),
                ("Zone2", 20200201, "all"),
                ("Zone2", 20200202, "all"),
                ("Zone2", 20200203, "all"),
                ("Zone2", 20200204, "all"),
                ("Zone2", 20200205, "all"),
                ("Zone2", 20200206, "all"),
                ("Zone2", 20200207, "all"),
                ("Zone2", 20200208, "all"),
                ("Zone2", 20200209, "all"),
                ("Zone2", 20200210, "all"),
                ("Zone2", 20200211, "all"),
                ("Zone2", 20200212, "all"),
                ("Zone2", 20200213, "all"),
                ("Zone2", 20200214, "all"),
                ("Zone2", 20200215, "all"),
                ("Zone2", 20200216, "all"),
                ("Zone2", 20200217, "all"),
                ("Zone2", 20200218, "all"),
                ("Zone2", 20200219, "all"),
                ("Zone2", 20200220, "all"),
                ("Zone2", 20200221, "all"),
                ("Zone2", 20200222, "all"),
                ("Zone2", 20200223, "all"),
                ("Zone2", 20200224, "all"),
                ("Zone2", 20300101, "all"),
                ("Zone2", 20300102, "all"),
                ("Zone2", 20300103, "all"),
                ("Zone2", 20300104, "all"),
                ("Zone2", 20300105, "all"),
                ("Zone2", 20300106, "all"),
                ("Zone2", 20300107, "all"),
                ("Zone2", 20300108, "all"),
                ("Zone2", 20300109, "all"),
                ("Zone2", 20300110, "all"),
                ("Zone2", 20300111, "all"),
                ("Zone2", 20300112, "all"),
                ("Zone2", 20300113, "all"),
                ("Zone2", 20300114, "all"),
                ("Zone2", 20300115, "all"),
                ("Zone2", 20300116, "all"),
                ("Zone2", 20300117, "all"),
                ("Zone2", 20300118, "all"),
                ("Zone2", 20300119, "all"),
                ("Zone2", 20300120, "all"),
                ("Zone2", 20300121, "all"),
                ("Zone2", 20300122, "all"),
                ("Zone2", 20300123, "all"),
                ("Zone2", 20300124, "all"),
                ("Zone2", 20300201, "all"),
                ("Zone2", 20300202, "all"),
                ("Zone2", 20300203, "all"),
                ("Zone2", 20300204, "all"),
                ("Zone2", 20300205, "all"),
                ("Zone2", 20300206, "all"),
                ("Zone2", 20300207, "all"),
                ("Zone2", 20300208, "all"),
                ("Zone2", 20300209, "all"),
                ("Zone2", 20300210, "all"),
                ("Zone2", 20300211, "all"),
                ("Zone2", 20300212, "all"),
                ("Zone2", 20300213, "all"),
                ("Zone2", 20300214, "all"),
                ("Zone2", 20300215, "all"),
                ("Zone2", 20300216, "all"),
                ("Zone2", 20300217, "all"),
                ("Zone2", 20300218, "all"),
                ("Zone2", 20300219, "all"),
                ("Zone2", 20300220, "all"),
                ("Zone2", 20300221, "all"),
                ("Zone2", 20300222, "all"),
                ("Zone2", 20300223, "all"),
                ("Zone2", 20300224, "all"),
                ("Zone3", 20200101, "all"),
                ("Zone3", 20200102, "all"),
                ("Zone3", 20200103, "all"),
                ("Zone3", 20200104, "all"),
                ("Zone3", 20200105, "all"),
                ("Zone3", 20200106, "all"),
                ("Zone3", 20200107, "all"),
                ("Zone3", 20200108, "all"),
                ("Zone3", 20200109, "all"),
                ("Zone3", 20200110, "all"),
                ("Zone3", 20200111, "all"),
                ("Zone3", 20200112, "all"),
                ("Zone3", 20200113, "all"),
                ("Zone3", 20200114, "all"),
                ("Zone3", 20200115, "all"),
                ("Zone3", 20200116, "all"),
                ("Zone3", 20200117, "all"),
                ("Zone3", 20200118, "all"),
                ("Zone3", 20200119, "all"),
                ("Zone3", 20200120, "all"),
                ("Zone3", 20200121, "all"),
                ("Zone3", 20200122, "all"),
                ("Zone3", 20200123, "all"),
                ("Zone3", 20200124, "all"),
                ("Zone3", 20200201, "all"),
                ("Zone3", 20200202, "all"),
                ("Zone3", 20200203, "all"),
                ("Zone3", 20200204, "all"),
                ("Zone3", 20200205, "all"),
                ("Zone3", 20200206, "all"),
                ("Zone3", 20200207, "all"),
                ("Zone3", 20200208, "all"),
                ("Zone3", 20200209, "all"),
                ("Zone3", 20200210, "all"),
                ("Zone3", 20200211, "all"),
                ("Zone3", 20200212, "all"),
                ("Zone3", 20200213, "all"),
                ("Zone3", 20200214, "all"),
                ("Zone3", 20200215, "all"),
                ("Zone3", 20200216, "all"),
                ("Zone3", 20200217, "all"),
                ("Zone3", 20200218, "all"),
                ("Zone3", 20200219, "all"),
                ("Zone3", 20200220, "all"),
                ("Zone3", 20200221, "all"),
                ("Zone3", 20200222, "all"),
                ("Zone3", 20200223, "all"),
                ("Zone3", 20200224, "all"),
                ("Zone3", 20300101, "all"),
                ("Zone3", 20300102, "all"),
                ("Zone3", 20300103, "all"),
                ("Zone3", 20300104, "all"),
                ("Zone3", 20300105, "all"),
                ("Zone3", 20300106, "all"),
                ("Zone3", 20300107, "all"),
                ("Zone3", 20300108, "all"),
                ("Zone3", 20300109, "all"),
                ("Zone3", 20300110, "all"),
                ("Zone3", 20300111, "all"),
                ("Zone3", 20300112, "all"),
                ("Zone3", 20300113, "all"),
                ("Zone3", 20300114, "all"),
                ("Zone3", 20300115, "all"),
                ("Zone3", 20300116, "all"),
                ("Zone3", 20300117, "all"),
                ("Zone3", 20300118, "all"),
                ("Zone3", 20300119, "all"),
                ("Zone3", 20300120, "all"),
                ("Zone3", 20300121, "all"),
                ("Zone3", 20300122, "all"),
                ("Zone3", 20300123, "all"),
                ("Zone3", 20300124, "all"),
                ("Zone3", 20300201, "all"),
                ("Zone3", 20300202, "all"),
                ("Zone3", 20300203, "all"),
                ("Zone3", 20300204, "all"),
                ("Zone3", 20300205, "all"),
                ("Zone3", 20300206, "all"),
                ("Zone3", 20300207, "all"),
                ("Zone3", 20300208, "all"),
                ("Zone3", 20300209, "all"),
                ("Zone3", 20300210, "all"),
                ("Zone3", 20300211, "all"),
                ("Zone3", 20300212, "all"),
                ("Zone3", 20300213, "all"),
                ("Zone3", 20300214, "all"),
                ("Zone3", 20300215, "all"),
                ("Zone3", 20300216, "all"),
                ("Zone3", 20300217, "all"),
                ("Zone3", 20300218, "all"),
                ("Zone3", 20300219, "all"),
                ("Zone3", 20300220, "all"),
                ("Zone3", 20300221, "all"),
                ("Zone3", 20300222, "all"),
                ("Zone3", 20300223, "all"),
                ("Zone3", 20300224, "all"),
            ]
        )
        actual_lz_tmp_lc_def_load = sorted(
            [
                (z, tmp, cmp)
                for (z, tmp, cmp) in instance.LOAD_ZONE_TMP_LOAD_CMPNTS_W_DEFINED_LOAD
            ]
        )
        self.assertListEqual(expected_lz_tmp_lc_def_load, actual_lz_tmp_lc_def_load)

        # Param: component_static_load_mw_w_tmp_value
        load_df = pd.read_csv(
            os.path.join(TEST_DATA_DIRECTORY, "inputs", "load_mw.tab"), sep="\t"
        )
        expected_component_static_load_tmp_value = OrderedDict(
            sorted(
                load_df.set_index(["LOAD_ZONES", "timepoint", "load_component"])
                .to_dict()["load_mw"]
                .items()
            )
        )
        actual_component_static_load_tmp_value = OrderedDict(
            sorted(
                {
                    (z, tmp, cmp): instance.component_static_load_mw_w_tmp_value[
                        z, tmp, cmp
                    ]
                    for (
                        z,
                        tmp,
                        cmp,
                    ) in instance.LOAD_ZONE_TMP_LOAD_CMPNTS_W_DEFINED_LOAD
                }.items()
            )
        )
        self.assertDictEqual(
            expected_component_static_load_tmp_value,
            actual_component_static_load_tmp_value,
        )

        # Check validation
        from gridpath.system.load_balance.static_load_requirement import (
            check_for_value_and_raise_value_error,
        )

        self.assertRaises(
            ValueError,
            check_for_value_and_raise_value_error,
            instance.load_level_default["Zone1", "all"],
            "undefined",
            "msg",
        )

        # Param: component_static_load_mw
        default_loads = {
            ("Zone4", 20200101, "all"): 0,
            ("Zone4", 20200102, "all"): 0,
            ("Zone4", 20200103, "all"): 0,
            ("Zone4", 20200104, "all"): 0,
            ("Zone4", 20200105, "all"): 0,
            ("Zone4", 20200106, "all"): 0,
            ("Zone4", 20200107, "all"): 0,
            ("Zone4", 20200108, "all"): 0,
            ("Zone4", 20200109, "all"): 0,
            ("Zone4", 20200110, "all"): 0,
            ("Zone4", 20200111, "all"): 0,
            ("Zone4", 20200112, "all"): 0,
            ("Zone4", 20200113, "all"): 0,
            ("Zone4", 20200114, "all"): 0,
            ("Zone4", 20200115, "all"): 0,
            ("Zone4", 20200116, "all"): 0,
            ("Zone4", 20200117, "all"): 0,
            ("Zone4", 20200118, "all"): 0,
            ("Zone4", 20200119, "all"): 0,
            ("Zone4", 20200120, "all"): 0,
            ("Zone4", 20200121, "all"): 0,
            ("Zone4", 20200122, "all"): 0,
            ("Zone4", 20200123, "all"): 0,
            ("Zone4", 20200124, "all"): 0,
            ("Zone4", 20200201, "all"): 0,
            ("Zone4", 20200202, "all"): 0,
            ("Zone4", 20200203, "all"): 0,
            ("Zone4", 20200204, "all"): 0,
            ("Zone4", 20200205, "all"): 0,
            ("Zone4", 20200206, "all"): 0,
            ("Zone4", 20200207, "all"): 0,
            ("Zone4", 20200208, "all"): 0,
            ("Zone4", 20200209, "all"): 0,
            ("Zone4", 20200210, "all"): 0,
            ("Zone4", 20200211, "all"): 0,
            ("Zone4", 20200212, "all"): 0,
            ("Zone4", 20200213, "all"): 0,
            ("Zone4", 20200214, "all"): 0,
            ("Zone4", 20200215, "all"): 0,
            ("Zone4", 20200216, "all"): 0,
            ("Zone4", 20200217, "all"): 0,
            ("Zone4", 20200218, "all"): 0,
            ("Zone4", 20200219, "all"): 0,
            ("Zone4", 20200220, "all"): 0,
            ("Zone4", 20200221, "all"): 0,
            ("Zone4", 20200222, "all"): 0,
            ("Zone4", 20200223, "all"): 0,
            ("Zone4", 20200224, "all"): 0,
            ("Zone4", 20300101, "all"): 0,
            ("Zone4", 20300102, "all"): 0,
            ("Zone4", 20300103, "all"): 0,
            ("Zone4", 20300104, "all"): 0,
            ("Zone4", 20300105, "all"): 0,
            ("Zone4", 20300106, "all"): 0,
            ("Zone4", 20300107, "all"): 0,
            ("Zone4", 20300108, "all"): 0,
            ("Zone4", 20300109, "all"): 0,
            ("Zone4", 20300110, "all"): 0,
            ("Zone4", 20300111, "all"): 0,
            ("Zone4", 20300112, "all"): 0,
            ("Zone4", 20300113, "all"): 0,
            ("Zone4", 20300114, "all"): 0,
            ("Zone4", 20300115, "all"): 0,
            ("Zone4", 20300116, "all"): 0,
            ("Zone4", 20300117, "all"): 0,
            ("Zone4", 20300118, "all"): 0,
            ("Zone4", 20300119, "all"): 0,
            ("Zone4", 20300120, "all"): 0,
            ("Zone4", 20300121, "all"): 0,
            ("Zone4", 20300122, "all"): 0,
            ("Zone4", 20300123, "all"): 0,
            ("Zone4", 20300124, "all"): 0,
            ("Zone4", 20300201, "all"): 0,
            ("Zone4", 20300202, "all"): 0,
            ("Zone4", 20300203, "all"): 0,
            ("Zone4", 20300204, "all"): 0,
            ("Zone4", 20300205, "all"): 0,
            ("Zone4", 20300206, "all"): 0,
            ("Zone4", 20300207, "all"): 0,
            ("Zone4", 20300208, "all"): 0,
            ("Zone4", 20300209, "all"): 0,
            ("Zone4", 20300210, "all"): 0,
            ("Zone4", 20300211, "all"): 0,
            ("Zone4", 20300212, "all"): 0,
            ("Zone4", 20300213, "all"): 0,
            ("Zone4", 20300214, "all"): 0,
            ("Zone4", 20300215, "all"): 0,
            ("Zone4", 20300216, "all"): 0,
            ("Zone4", 20300217, "all"): 0,
            ("Zone4", 20300218, "all"): 0,
            ("Zone4", 20300219, "all"): 0,
            ("Zone4", 20300220, "all"): 0,
            ("Zone4", 20300221, "all"): 0,
            ("Zone4", 20300222, "all"): 0,
            ("Zone4", 20300223, "all"): 0,
            ("Zone4", 20300224, "all"): 0,
        }
        expected_component_static_load = expected_component_static_load_tmp_value
        expected_component_static_load.update(default_loads)  # add the
        # defaults to the tmp values

        actual_component_static_load = OrderedDict(
            sorted(
                {
                    (z, tmp, cmp): instance.component_static_load_mw[z, tmp, cmp]
                    for (z, tmp, cmp) in instance.LOAD_ZONE_TMP_LOAD_CMPNTS_ALL
                }.items()
            )
        )

        self.assertDictEqual(
            expected_component_static_load, actual_component_static_load
        )


if __name__ == "__main__":
    unittest.main()
